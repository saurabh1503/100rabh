<?php 
use Magento\Framework\App\Bootstrap;
include('app/bootstrap.php');
$bootstrap = Bootstrap::create(BP, $_SERVER);
$objectManager = $bootstrap->getObjectManager();
$state = $objectManager->get('Magento\Framework\App\State');
$store = $objectManager->get('Magento\Store\Model\StoreManagerInterface')->getStore();
$state->setAreaCode('frontend');

$date = date('Y-m-d H:i:s');
$fromDate = date('Y-m-d H:i:s', strtotime($date .' -1 day'));

$productCollection = $objectManager->create('Magento\Catalog\Model\ResourceModel\Product\Collection');
$collection = 	$productCollection->addAttributeToSelect('*')
								->addFieldToFilter('created_at', array('from'=>$fromDate, 'to'=>$date))
								->load();


			
		$filename = "C:/xampp/htdocs/dump/nextopia-feed1.csv";
		$csv = ImportCSV2Array($filename);

		$csvData = file_get_contents($filename);
		$csvs = explode("\n", $csvData);

		$newData = array();
		foreach($csv as $rowNew) {
		foreach ($collection as $product){
				 $specialPrice = $product->getSpecialPrice();
					if($specialPrice){
					$price = $specialPrice;
					} 
					else{
						$price = $product->getPrice();
					}
					$rowNew['id'] = $product->getId();
					$rowNew['sku'] = $product->getSku();
					$rowNew['title'] = $product->getName();
					$rowNew['link'] = $product->getProductUrl();
					$rowNew['image_link'] = 'https://www.gowebpix.com/efloors/'.$product->getSku().'.jpg?width=250&height=250';
					$rowNew['price'] = $price;
					$rowNew['description'] = $product->getMetaDescription();
					$rowNew['accessories_category'] = $product->getAccessoriesCategory();
					$rowNew['accessories_manufacturer'] = $product->getAccessoriesManufacturer();
					$rowNew['arearugs_colors'] = $product->getArearugsColors();
					$rowNew['arearugs_manufacturer'] = $product->getArearugsManufacturer();
					$rowNew['arearugs_shape'] = $product->getArearugsShape();
					$rowNew['arearugs_theme'] = $product->getArearugsTheme();
					$rowNew['bamboo_colors'] = $product->getBambooColors();
					$rowNew['bamboo_construction'] = $product->getBambooConstruction();
					$rowNew['bamboo_installation'] = $product->getBambooInstallation();
					$rowNew['bamboo_manufacturer'] = $product->getBambooManufacturer();
					$rowNew['bamboo_thickness'] = $product->getBambooThickness();
					$rowNew['bamboo_width'] = $product->getBambooWidth();
					$rowNew['carpettile_manufacturer'] = $product->getCarpettileManufacturer();
					$rowNew['category_gear'] = $product->getCategoryGear();
					$rowNew['climate'] = $product->getClimate();
					$rowNew['clocks_finish'] = $product->getClocksFinish();
					$rowNew['clocks_material'] = $product->getClocksMaterial();
					$rowNew['clocks_style'] = $product->getClocksStyle();
					$rowNew['clocks_type'] = $product->getClocksType();
					$rowNew['collar'] = $product->getCollar();
					$rowNew['cork_colors'] = $product->getCorkColors();
					$rowNew['cork_installation'] = $product->getCorkInstallation();
					$rowNew['cork_manufacturer'] = $product->getCorkManufacturer();
					$rowNew['cork_thickness'] = $product->getCorkThickness();
					$rowNew['cork_width'] = $product->getCorkWidth();
					$rowNew['eco_collection'] = $product->getEcoCollection();
					$rowNew['erin_recommends'] = $product->getErinRecommends();
					$rowNew['format'] = $product->getFormat();
					$rowNew['glasstile_colors'] = $product->getGlasstileColors();
					$rowNew['glasstile_composition'] = $product->getGlasstileComposition();
					$rowNew['glasstile_manufacturer'] = $product->getGlasstileManufacturer();
					$rowNew['glasstile_tilesize'] = $product->getGlasstileTilesize();
					$rowNew['glasstile_visual'] = $product->getGlasstileVisual();
					$rowNew['hardwood_colors'] = $product->getHardwoodColors();
					$rowNew['hardwood_construction'] = $product->getHardwoodConstruction();
					$rowNew['hardwood_finish'] = $product->getHardwoodFinish();
					$rowNew['hardwood_manufacturer'] = $product->getHardwoodManufacturer();
					$rowNew['hardwood_species'] = $product->getHardwoodSpecies();
					$rowNew['hardwood_thickness'] = $product->getHardwoodThickness();
					$rowNew['hardwood_width'] = $product->getHardwoodWidth();
					$rowNew['laminate_colors'] = $product->getLaminateColors();
					$rowNew['laminate_manufacturer'] = $product->getLaminateManufacturer();
					$rowNew['laminate_thickness'] = $product->getLaminateThickness();
					$rowNew['laminate_visual'] = $product->getLaminateVisual();
					$rowNew['luxuryvinyl_colors'] = $product->getLuxuryvinylColors();
					$rowNew['luxuryvinyl_installation'] = $product->getLuxuryvinylInstallation();
					$rowNew['luxuryvinyl_manufacturer'] = $product->getLuxuryvinylManufacturer();
					$rowNew['luxuryvinyl_tilesize'] = $product->getLuxuryvinylTilesize();
					$rowNew['luxuryvinyl_visual'] = $product->getLuxuryvinylVisual();
					$rowNew['new'] = $product->getNew();
					$rowNew['pattern'] = $product->getPattern();
					$rowNew['pcategory'] = $product->getPcategory();
					$rowNew['performance_fabric'] = $product->getPerformanceFabric();
					$rowNew['product_type1'] = $product->getProductType1();
					$rowNew['sale'] = $product->getSale();
					$rowNew['sleeve'] = $product->getSleeve();
					$rowNew['styles_name'] = $product->getStylesName();
					$rowNew['vacuum_manufacture'] = $product->getVacuumManufacture();
					$rowNew['vacuum_type'] = $product->getVacuumType();
					$rowNew['visual'] = $product->getVisual();
					$rowNew['pshowprice'] = $product->getData('pshowprice');
					$rowNew['pPopularityIndex'] = $product->getData('ppopularityindex');
					$rowNew['psell'] = $product->getPsell();
					$rowNew['samplesku'] = $product->getSampleSku(); 
				 
				 
	
					
			$newData[] = implode(",", $rowNew);
			
			}
			echo "<pre>"; print_r($newData); die;
			}
			
			//array_unshift($newData,$csvs[0]);
		
			
			//$newData = implode("\n", $newData);
			
			//array_push($filename,$newData);
			//file_put_contents($filename, $newData);

 function ImportCSV2Array($filename)
	{
		$rows = 0;
		$col = 0;
	 
		$handle = @fopen($filename, "r");
		if ($handle) 
		{
			while (($rows = fgetcsv($handle, 4096)) !== false) 
			{
				if (empty($fields)) 
				{
					$fields = $rows;
					continue;
				}
	 
				foreach ($rows as $k=>$value) 
				{
					$results[$col][$fields[$k]] = $value;
				}
				$col++;
				unset($rows);
			}
			if (!feof($handle)) 
			{
				echo "Error: unexpected fgets() failn";
			}
			fclose($handle);

		}
	 
		return $results;
	}								

echo "Update done successfully.";

?>							


