<?php
use Magento\Framework\App\Bootstrap;
include('app/bootstrap.php');
$bootstrap = Bootstrap::create(BP, $_SERVER);
$objectManager = $bootstrap->getObjectManager();
$state = $objectManager->get('Magento\Framework\App\State');
$store = $objectManager->get('Magento\Store\Model\StoreManagerInterface')->getStore();
$state->setAreaCode('frontend');

$date = date('Y-m-d H:i:s');
$fromDate = date('Y-m-d H:i:s', strtotime($date .' -1 day'));
$strtmonth =date('Y-m-01 H:i:s',strtotime('this month'));
$dates = array($fromDate,$strtmonth);
$info='';
foreach($dates as $from){
$ordercollection = $objectManager->get('\Magento\Sales\Model\ResourceModel\Order\CollectionFactory')->create();
$collection = 	$ordercollection->addAttributeToSelect('*')
								->addFieldToFilter('created_at', array('from'=>$from, 'to'=>$date))
								->addFieldToFilter('status', array('nin' => array('cancelled')));
								
											

$total = 0;
$sample =0;	
$allqty=0;
$sampleqty=0;	
				
 foreach($collection as $order){
	 $totalqty = $order->getData('total_qty_ordered');
	 $grandtotal = $order->getData('grand_total');
	 $subtotal = $order->getData('subtotal');


	 
	 if ($subtotal == 0.99){
		 $samplesum = $order->getData('grand_total');
		 $totalqty = $order->getData('total_qty_ordered');
		 $sample += $samplesum;
		 $sampleqty += $totalqty;
		 
	 }
	 else{
		 	 $total += $grandtotal;
			$allqty += $totalqty;
	 }

 }
 
if ($from==$fromDate){
$dated ='Sales Report for '.date("F j, Y");
}
else{
	
	$dated ='Month to Date for '.date("F, Y");
}
$totalqtysales = $sampleqty+$allqty;
$totalsales = $total+$sample;




}

$report = [
                'report_date' => date("j F Y", strtotime('-1 day')),
                'orders_count' => rand(1, 10),
                'order_items_count' => rand(1, 10),
                'avg_items' => rand(1, 10)
            ];

            $postObject = new \Magento\Framework\DataObject();
            $postObject->setData($report);

            $transportBuilder = $objectManager->create('\Magento\Framework\Mail\Template\TransportBuilder');
				$transport = $transportBuilder
                ->setTemplateIdentifier('daily_status_template')
                ->setTemplateOptions(['area' => \Magento\Framework\App\Area::AREA_FRONTEND, 'store' => \Magento\Store\Model\Store::DEFAULT_STORE_ID])
                ->setTemplateVars(['data' => $postObject])
                ->setFrom(['name' => 'Robot','email' => 'robot@server.com'])
                ->addTo(['fred@server.com', 'otherguy@server.com'])
                ->getTransport();
            $transport->sendMessage();
								
?>




